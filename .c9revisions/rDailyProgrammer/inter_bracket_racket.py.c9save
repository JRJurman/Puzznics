{"ts":1350712776301,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1350712915971,"patch":[[{"diffs":[[1,"\"\"\"http://www.reddit.com/r/dailyprogrammer/comments/11par4/10182012_challenge_104_intermediate_bracket_racket/\"\"\"\n\n\"\"\"Description:\nWrite a function, where given a string of arbitrary characters, returns true if all brackets (defined as parentheses, square-brackets, curly-braces, and chevrons[1] ) are correctly paired and ordered. This is to say that all brackets, if they enclose other brackets, enclose both the paired opening and closing characters.\nFormal Inputs & Outputs:\nInput Description:\nstring data - a given string that may or may not have correctly formed brackets.\nOutput Description:\nReturn True or False - true if the given string is correctly bracket formed.\nSample Inputs & Outputs:\n\"123\", \"(abc)\", \"()abc()\", and \"([<{abc123abc}>])\" should return true, but \"(abc[123)abc]\" (wrong pairing) and \"(abc>\" (not closed) should return false.\nNotes:\nThis is a very easy problem if you use a specific primitive data-structure. \"\"\""]],"start1":0,"start2":0,"length1":0,"length2":940}]],"length":940,"saved":false}
{"ts":1350713028212,"patch":[[{"diffs":[[0,"ure. \"\"\""],[1,"\n\ndef bracketCheck(pString):\n    "]],"start1":932,"start2":932,"length1":8,"length2":41}]],"length":973,"saved":false}
{"ts":1350713320687,"patch":[[{"diffs":[[0,"e. \"\"\"\n\n"],[1,"from Stack import Stack\n\n"],[0,"def brac"]],"start1":934,"start2":934,"length1":16,"length2":41},{"diffs":[[0,"g):\n    "],[1,"pass\n    "]],"start1":990,"start2":990,"length1":8,"length2":17}]],"length":1007,"saved":false}
{"ts":1350713334134,"patch":[[{"diffs":[[0,"\"\n\nfrom "],[1,"../"],[0,"Stack im"]],"start1":939,"start2":939,"length1":16,"length2":19}]],"length":1010,"saved":false}
{"ts":1350713346682,"patch":[[{"diffs":[[0,"rom "],[-1,"../"],[0,"Stac"]],"start1":943,"start2":943,"length1":11,"length2":8}]],"length":1007,"saved":false}
{"ts":1350713681539,"patch":[[{"diffs":[[0,"\"\n\nfrom "],[1,"JR"],[0,"Stack im"]],"start1":939,"start2":939,"length1":16,"length2":18}]],"length":1009,"saved":false}
{"ts":1350713708503,"patch":[[{"diffs":[[0,"e. \"\"\"\n\n"],[1,"#"],[0,"from JRS"]],"start1":934,"start2":934,"length1":16,"length2":17},{"diffs":[[0,"rt Stack"],[1,"\nimport JRStack"],[0,"\n\ndef br"]],"start1":960,"start2":960,"length1":16,"length2":31}]],"length":1025,"saved":false}
{"ts":1350714068911,"patch":[[{"diffs":[[0,"k\nimport"],[1," .."],[0," JRStack"]],"start1":967,"start2":967,"length1":16,"length2":19}]],"length":1028,"saved":false}
{"ts":1350714095780,"patch":[[{"diffs":[[0,"ack\n"],[1,"from .. "],[0,"import"],[-1," .."],[0," JRS"]],"start1":965,"start2":965,"length1":17,"length2":22}]],"length":1033,"saved":false}
{"ts":1350714191590,"patch":[[{"diffs":[[0,"\nfrom .."],[1,"."],[0," import "]],"start1":968,"start2":968,"length1":16,"length2":17}]],"length":1034,"saved":false}
{"ts":1350714205221,"patch":[[{"diffs":[[0,"ack\n"],[-1,"from ... "],[0,"impo"]],"start1":965,"start2":965,"length1":17,"length2":8}]],"length":1025,"saved":false}
{"ts":1350714392013,"patch":[[{"diffs":[[0,"t Stack\n"],[1,"from puzznics.JRStack "],[0,"import J"]],"start1":961,"start2":961,"length1":16,"length2":38}]],"length":1047,"saved":false}
{"ts":1350714398280,"patch":[[{"diffs":[[0," import "],[-1,"JR"],[0,"Stack\n\nd"]],"start1":990,"start2":990,"length1":18,"length2":16}]],"length":1045,"saved":false}
{"ts":1350714415521,"patch":[[{"diffs":[[0,"nics"],[-1,".JRStack"],[0," import "],[1,"JR"],[0,"Stac"]],"start1":978,"start2":978,"length1":24,"length2":18}]],"length":1039,"saved":false}
{"ts":1350714499929,"patch":[[{"diffs":[[0,"ck\nfrom "],[1,"."],[0,"puzznics"]],"start1":966,"start2":966,"length1":16,"length2":17}]],"length":1040,"saved":false}
{"ts":1350714592958,"patch":[[{"diffs":[[0,"ck\nfrom "],[-1,"."],[0,"puzznics"]],"start1":966,"start2":966,"length1":17,"length2":16}]],"length":1039,"saved":false}
{"ts":1350714661793,"patch":[[{"diffs":[[0,"puzznics"],[1,".JRStack"],[0," import "]],"start1":974,"start2":974,"length1":16,"length2":24}]],"length":1047,"saved":false}
{"ts":1350714664388,"patch":[[{"diffs":[[0," import "],[-1,"JR"],[0,"Stack\n\nd"]],"start1":990,"start2":990,"length1":18,"length2":16}]],"length":1045,"saved":false}
{"ts":1350714778385,"patch":[[{"diffs":[[0,"rom "],[-1,"puzznics."],[0,"JRSt"]],"start1":970,"start2":970,"length1":17,"length2":8}]],"length":1036,"saved":false}
{"ts":1350714787174,"patch":[[{"diffs":[[0," Stack\nfrom "],[1,"puzznics."],[0,"JRStack impo"]],"start1":962,"start2":962,"length1":24,"length2":33}]],"length":1045,"saved":false}
{"ts":1350714789755,"patch":[[{"diffs":[[0,"\"\"\n\n"],[-1,"#from JRStack import Stack\n"],[0,"from"]],"start1":938,"start2":938,"length1":35,"length2":8}]],"length":1018,"saved":false}
{"ts":1350714805666,"patch":[[{"diffs":[[0,"\"\n\nfrom "],[1,"."],[0,"puzznics"]],"start1":939,"start2":939,"length1":16,"length2":17}]],"length":1019,"saved":false}
{"ts":1350714832095,"patch":[[{"diffs":[[0,"\"\n\nfrom "],[-1,"."],[0,"puzznics"]],"start1":939,"start2":939,"length1":17,"length2":16}]],"length":1018,"saved":false}
{"ts":1350714848771,"patch":[[{"diffs":[[0,"nics"],[-1,".JRStack"],[0," import "],[1,"JR"],[0,"Stac"]],"start1":951,"start2":951,"length1":24,"length2":18}]],"length":1012,"saved":false}
{"ts":1350715120008,"patch":[[{"diffs":[[0,"\"\"\n\n"],[-1,"from puzznics "],[0,"impo"]],"start1":938,"start2":938,"length1":22,"length2":8}]],"length":998,"saved":false}
